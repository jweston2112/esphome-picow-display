substitutions:
  time_timezone: "America/New_York"

esphome:
  name: pico
  friendly_name: pico
  includes:
    - picodisplay/tft_espi_display.h
    - picodisplay/Free_Fonts.h
    - picodisplay/bitmaps.h
  libraries:
    - SPI
    - picodisplay=https://github.com/jweston2112/esphome-picow-display

rp2040:
  board: rpipicow
  framework:
    platform_version: https://github.com/maxgerhardt/platform-raspberrypi


# Enable logging
logger:
  level: debug

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_encryption

ota:
  password: !secret ota_encryption

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Pico Hotspot"
    password: "Random_password_here"

time:
  - platform: homeassistant
    id: ha_time
    timezone: "${time_timezone}"
    on_time_sync:
      - component.update: uptime_human

# **********************************************************
#   ILI9341 DISPLAY using TFT_eSPI
# **********************************************************
interval:
  - interval: 1s
    then:
    - lambda: |-
        // displayControllerComponent->clear();
        displayControllerComponent->tft.setTextColor(TFT_WHITE, TFT_BLACK, true);
        displayControllerComponent->tft.setFreeFont(FMB9);
        displayControllerComponent->tft.drawString(id(ha_time).now().strftime("%H:%M:%S %m-%d-%Y").c_str(),10,125);
        // displayControllerComponent->tft.drawXBitmap(40, 50, temp, iconWidth, iconHeight, TFT_YELLOW);
        // displayControllerComponent->tft.drawXBitmap(40, 105, humidity, iconWidth, iconHeight, TFT_BLUE);
        // displayControllerComponent->tft.drawXBitmap(40, 160, pressure, iconWidth, iconHeight, TFT_GREEN);



# switch:
#   - platform: gpio
#     pin: GPIO38
#     name: "Backlight"
#     id: backlight
#     internal: true
#     restore_mode: RESTORE_DEFAULT_ON

custom_component:
    lambda: |-
        App.register_component(displayControllerComponent);
        return {displayControllerComponent};
    id: displayComponent

# TFT_BLACK       0x0000      /*   0,   0,   0 */
# TFT_NAVY        0x000F      /*   0,   0, 128 */
# TFT_DARKGREEN   0x03E0      /*   0, 128,   0 */
# TFT_DARKCYAN    0x03EF      /*   0, 128, 128 */
# TFT_MAROON      0x7800      /* 128,   0,   0 */
# TFT_PURPLE      0x780F      /* 128,   0, 128 */
# TFT_OLIVE       0x7BE0      /* 128, 128,   0 */
# TFT_LIGHTGREY   0xD69A      /* 211, 211, 211 */
# TFT_DARKGREY    0x7BEF      /* 128, 128, 128 */
# TFT_BLUE        0x001F      /*   0,   0, 255 */
# TFT_GREEN       0x07E0      /*   0, 255,   0 */
# TFT_CYAN        0x07FF      /*   0, 255, 255 */
# TFT_RED         0xF800      /* 255,   0,   0 */
# TFT_MAGENTA     0xF81F      /* 255,   0, 255 */
# TFT_YELLOW      0xFFE0      /* 255, 255,   0 */
# TFT_WHITE       0xFFFF      /* 255, 255, 255 */
# TFT_ORANGE      0xFDA0      /* 255, 180,   0 */
# TFT_GREENYELLOW 0xB7E0      /* 180, 255,   0 */
# TFT_PINK        0xFE19      /* 255, 192, 203 */ //Lighter pink, was 0xFC9F
# TFT_BROWN       0x9A60      /* 150,  75,   0 */
# TFT_GOLD        0xFEA0      /* 255, 215,   0 */
# TFT_SILVER      0xC618      /* 192, 192, 192 */
# TFT_SKYBLUE     0x867D      /* 135, 206, 235 */
# TFT_VIOLET      0x915C      /* 180,  46, 226 */    


    


